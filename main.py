import os
import logging
from dotenv import load_dotenv
from aiohttp import web
from aiogram import Bot, Dispatcher, types, F
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.webhook.aiohttp_server import SimpleRequestHandler, setup_application
from aiogram.client.default import DefaultBotProperties
from search import search_movie

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_HOST = os.getenv("WEBHOOK_HOST", "").strip()
PORT = int(os.getenv("PORT", 10000))

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å WEBHOOK_HOST
if not WEBHOOK_HOST.startswith("https://"):
    raise ValueError("WEBHOOK_HOST –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å https:// –∏ –±—ã—Ç—å –≤–∞–ª–∏–¥–Ω—ã–º URL Render-—Å–µ—Ä–≤–∏—Å–∞.")

WEBHOOK_PATH = "/webhook"
WEBHOOK_URL = f"{WEBHOOK_HOST}{WEBHOOK_PATH}"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–æ–≤ –∏ –±–æ—Ç–∞
logging.basicConfig(level=logging.INFO)
bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher(storage=MemoryStorage())

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(F.text.lower() == "/start")
async def cmd_start(message: types.Message):
    await message.answer("–ó–¥–∞—Ä–æ–≤–∞, –∫–æ–∂–∞–Ω—ã–π! –ü–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞, –µ—Å–ª–∏ –Ω–µ —Ç—É–ø–æ–π üñï")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message(F.text)
async def handle_search(message: types.Message):
    query = message.text.strip()
    await message.answer("–°–µ–∫—É–Ω–¥—É, –∏—â—É —Ç–≤–æ—é –ø–∞—Ä–∞—à—É üé¨")

    try:
        results = await search_movie(query)
        if not results:
            await message.answer("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à—ë–ª. –ú–æ–∂–µ—Ç, —Ç—ã –∏ –≤ —à–∫–æ–ª–µ —Ç–∞–∫ –∂–µ –∏—Å–∫–∞–ª –∑–Ω–∞–Ω–∏—è?")
            return

        for title, magnet in results:
            await message.answer(f"<b>{title}</b>\n<code>{magnet}</code>", parse_mode=ParseMode.HTML)

    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ —Ö—Ä–µ–Ω—å. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ, –ª–∞–¥—ã?")

# Webhook-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
async def on_startup(app: web.Application):
    await bot.set_webhook(WEBHOOK_URL)

def create_app():
    app = web.Application()
    SimpleRequestHandler(dispatcher=dp, bot=bot).register(app, path=WEBHOOK_PATH)
    setup_application(app, dp)
    app.on_startup.append(on_startup)
    return app

if __name__ == "__main__":
    app = create_app()
    web.run_app(app, host="0.0.0.0", port=PORT)
